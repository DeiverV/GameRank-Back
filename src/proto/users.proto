syntax="proto3";

package users;

service UsersService {
    rpc CreateUser(CreateUserDto) returns (Empty);
    rpc ValidateUser(ValidateUserDto) returns (User);
    rpc GetUserDetails(GetUserDetailsDto) returns (UserDetails);
    rpc GetAllPlayers(PaginationDto) returns (User);
    rpc GetUsersByGame(GetUserByGameDto) returns (GetUserByGameResponse);
    rpc UpdateUser(UpdateUserDto) returns (UserDetails);
    rpc DeleteUser(UserId) returns (Empty);
    rpc BlockOrUnblockUser(UserId) returns (Empty);
}

message UserId {
    string userId = 1;
}

message UpdateUserDto {
    string userId = 1;
    string username = 2; 
    File image = 3; 
}

message GetUserByGameResponse {
    number page = 1;
    number limit = 2;
    number totalCount = 3;
    number totalPages = 4;
    repeated UserSummary data = 5;
}

message GetUserByGameDto {
    number page = 1;
    number limit = 2;
    string game = 3;
}

message AllPlayerResponse {
    number page = 1;
    number limit = 2;
    number totalCount = 3;
    number totalPages = 4;
    repeated UserDetails data = 5;
}

message PaginationDto {
    number page = 1;
    number limit = 2;
}

message GetUserDetailsDto {
    string username = 1;
}

message UserSummary {
    string name = 1;
    string username = 2;
    string image = 3;
    string email = 4;
    string game = 5;
    number highestScore = 6;
}

message UserDetails {
    string id = 1;
    string name = 2;
    string username = 3;
    string email = 5;
    string image = 6;
    string role = 7;
    boolean isBlocked = 8;
    boolean rank = 9;
    boolean highestScore = 10;
}

message CreateUserDto {
    string name = 1;
    string username = 2;
    string password = 3;
    string email = 4;
}

message ValidateUserDto {
    string email = 1;
    string password = 2;
}

message User {
    string id = 1;
    string name = 2;
    string username = 3;
    string password = 4;
    string email = 5;
    string image = 6;
    string role = 7;
    boolean isBlocked = 8;
    boolean isActive = 9;
}

message Empty {}